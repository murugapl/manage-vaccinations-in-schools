<%= h1 page_title: @patient.initials do %>
  <%= "Inspect Patient-#{@patient.id}" %>

  <script type="module">
    import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.esm.min.mjs';
    mermaid.initialize({ startOnLoad: true });
  </script>

  <% if @no_events_message %>
    <%= render AppWarningCalloutComponent.new(
          heading: "No events found",
          description: "Patient-#{@patient.id} doesn't have the following events recorded: " + 
          "#{params[:event_names].map { |e| "#{event_options[e]}" }.join(", ")}".html_safe
        ) %>
  <% else %>
    <div class="nhsuk-u-margin-top-6">
      <pre class="mermaid">
        <%= @mermaid_code.html_safe %>
      </pre>
    </div>
  <% end %>


  <% if @invalid_patient_id %>
    <%= render AppWarningCalloutComponent.new(
          heading: "Invalid patient ID",
          description: "Patient-#{params[:manual_patient_id]} doesn't exist"
        ) %>
  <% elsif @no_events_compare_message %>
    <%= render AppWarningCalloutComponent.new(
          heading: "No events found for comparison patient",
          description: "Patient-#{@compare_patient.id} doesn't have the following events recorded: " + 
          "#{params[:event_names].map { |e| "#{event_options[e]}" }.join(", ")}".html_safe
        ) %>
  <% elsif @mermaid_compare_code %>
    <div class="nhsuk-u-margin-top-6">
      <pre class="mermaid">
        <%= @mermaid_compare_code.html_safe %>
      </pre>
    </div>
  <% end %>


  <%= render AppDetailsComponent.new(summary: "Customise timeline", expander: true, open: true ) do %>
    <%= form_with url: inspect_timeline_patient_path, method: :get, local: true do |f| %>

      <div class="nhsuk-form-group">
        <%= f.govuk_check_boxes_fieldset :event_names, legend: { text: "Events to display:", size: "s" } do %>
          
          <% event_options.each do |value, text| %>
            <div class="nhsuk-form-group">
              <%= f.govuk_check_box :event_names, value, 
                label: { text: text }, 
                checked: value.in?(params[:event_names]), 
                "data-autosubmit-target": "field", 
                "data-action": "autosubmit#submit", 
                "data-turbo-permanent": "true" %>

              <% # If TimelineRecords has fields for the event type, output dropdown for detail_config %>
              <% if value.to_s == 'audits' %>
                <% model_class = Audited::Audit %>
              <% else %>
                <% begin %>
                  <% model_class = value.to_s.classify.constantize %>
                <% rescue NameError %>
                  <% model_class = nil %>
                <% end %>
              <% end %>
              <% available_fields = model_class.column_names - %w[id created_at updated_at] %>
              <% if available_fields.present? %>
                <details class="nhsuk-details" style="margin-left:1em;">
                  <summary class="nhsuk-details__summary">Select fields for <%= text %></summary>
                  <div class="nhsuk-details__text">
                    <div class="nhsuk-form-group">
                      <%= f.select "detail_config[#{value}]",
                            available_fields.map { |field| [field.to_s.capitalize, field.to_s] },
                            { selected: (params.dig(:detail_config, value) || available_fields.map(&:to_s)) },
                            { multiple: true, class: "nhsuk-select", style: "height: 10em; margin-top: 5px;" } %>
                    </div>
                  </div>
                </details>
              <% end %>
            </div>
          <% end %>

          <%= f.govuk_check_box :event_names, "org_cohort_imports", 
            label: { text: "Cohort Imports for Organisation-#{@patient.organisation.id} excluding Patient" }, 
            checked: "org_cohort_imports".in?(params[:event_names]), 
            "data-autosubmit-target": "field", 
            "data-action": "autosubmit#submit", 
            "data-turbo-permanent": "true" %>

          <% (@additional_events[:class_imports]).each do |session_id, import_ids| %>
              <%= f.govuk_check_box :event_names, "add_class_imports_#{session_id}", 
                label: { text: "Class Imports for Session-#{session_id} excluding Patient" }, 
                checked: "add_class_imports_#{session_id}".in?(params[:event_names]),
                "data-autosubmit-target": "field", 
                "data-action": "autosubmit#submit", 
                "data-turbo-permanent": "true" %>

          <% end %>
        <% end %>
      </div>

      <div class="nhsuk-form-group">
        <%= f.govuk_radio_buttons_fieldset :compare_option, legend: { text: "Compare with another patient:", size: "s" } do %>

            <%= f.govuk_radio_button(
              :compare_option, nil,
              label: { text: "do not compare" },
              checked: params[:compare_option].blank?
            ) %>

            <% if @patient_events[:class_imports].present? %>
              <%= f.govuk_radio_button(
                    :compare_option, 'class_import',
                    label: { text: "from a Class Import" },
                    checked: params[:compare_option] == 'class_import',
                  ) do %>
                    <% @patient_events[:class_imports].each do |import| %>
                      <%= f.govuk_radio_button(
                          :compare_option_class_import, import,
                          label: { text: "ClassImport-#{import}" },
                          checked: params[:compare_option_class_import] == import.to_s,
                        )%>
                    <% end %>
              <% end %>
            <% end %>

            <% if @patient_events[:cohort_imports].present? %>
              <%= f.govuk_radio_button(
                    :compare_option, 'cohort_import',
                    label: { text: "from a Cohort Import" },
                    checked: params[:compare_option] == 'cohort_import',
                  ) do %>
                    <% @patient_events[:cohort_imports].each do |import| %>
                      <%= f.govuk_radio_button(
                          :compare_option_cohort_import, import,
                          label: { text: "CohortImport-#{import}" },
                          checked: params[:compare_option_cohort_import] == import.to_s,
                        )%>
                    <% end %>
              <% end %>
            <% end %>

            <% if @patient_events[:sessions].present? %>
              <%= f.govuk_radio_button(
                    :compare_option, 'session',
                    label: { text: "in a Session" },
                    checked: params[:compare_option] == 'session',
                  ) do %>
                    <% @patient_events[:sessions].each do |session| %>
                      <%= f.govuk_radio_button(
                          :compare_option_session, session,
                          label: { text: "Session-#{session}" },
                          checked: params[:compare_option_session] == session.to_s,
                        )%>
                    <% end %>
              <% end %>
            <% end %>

          <%= f.govuk_radio_button(
                :compare_option, 'manual_entry',
                label: { text: "with a specific Patient-ID" },
                checked: params[:compare_option] == 'manual_entry',
              ) do %>
            <%= f.govuk_text_field :manual_patient_id, label: { text: "Patient ID", size: "s" }, hint: { text: "Enter the ID of the patient you want to compare with" } %>
          <% end %>

        <% end %>
      </div>

      <%= f.govuk_submit "Reset filters", type: "reset",
                                          secondary: true,
                                          "data-autosubmit-target": "reset",
                                          "data-action": "autosubmit#submit",
                                          "data-turbo-permanent": "true",
                                          class: %w[nhsuk-u-display-block
                                                    app-button--small] %>
      <%= f.govuk_submit "Update timeline", "data-autosubmit-target": "filter",
                                   "data-turbo-permanent": "true" %>
    <% end %>
  <% end %>
<% end %>